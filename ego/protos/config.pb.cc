// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NEgoProto {

namespace {

const ::google::protobuf::Descriptor* TModelConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TModelConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_config_2eproto() {
  protobuf_AddDesc_config_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "config.proto");
  GOOGLE_CHECK(file != NULL);
  TModelConfig_descriptor_ = file->message_type(0);
  static const int TModelConfig_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModelConfig, cov_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModelConfig, mean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModelConfig, inf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModelConfig, lik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModelConfig, input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModelConfig, output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModelConfig, listentities_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModelConfig, verbose_),
  };
  TModelConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TModelConfig_descriptor_,
      TModelConfig::default_instance_,
      TModelConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModelConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TModelConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TModelConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_config_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TModelConfig_descriptor_, &TModelConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_config_2eproto() {
  delete TModelConfig::default_instance_;
  delete TModelConfig_reflection_;
}

void protobuf_AddDesc_config_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::NEgoProto::protobuf_AddDesc_extension_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014config.proto\022\tNEgoProto\032\017extension.pro"
    "to\"\302\003\n\014TModelConfig\0226\n\003Cov\030\001 \001(\tB)\272\353\035\026Co"
    "variance kernel name\312\353\035\013cMaternARD1\022/\n\004M"
    "ean\030\002 \001(\tB!\272\353\035\022Mean function name\312\353\035\007mLi"
    "near\0220\n\003Inf\030\003 \001(\tB#\272\353\035\025Inference method "
    "name\312\353\035\006iExact\0223\n\003Lik\030\004 \001(\tB&\272\353\035\030Likelih"
    "ood function name\312\353\035\006lGauss\0228\n\005Input\030\005 \001"
    "(\tB)\272\353\035\037Input file name *.csv supported\302"
    "\353\035\002-i\022*\n\006Output\030\006 \001(\tB\032\272\353\035\020Output file n"
    "ame\302\353\035\002-o\022J\n\014ListEntities\030\007 \001(\010B4\272\353\035*Lis"
    "t available entities in system and quit\302"
    "\353\035\002-l\0220\n\007Verbose\030\010 \001(\010B\037\272\353\035\025Turn on extr"
    "a logging\302\353\035\002-v", 495);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "config.proto", &protobuf_RegisterTypes);
  TModelConfig::default_instance_ = new TModelConfig();
  TModelConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_config_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_config_2eproto {
  StaticDescriptorInitializer_config_2eproto() {
    protobuf_AddDesc_config_2eproto();
  }
} static_descriptor_initializer_config_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TModelConfig::kCovFieldNumber;
const int TModelConfig::kMeanFieldNumber;
const int TModelConfig::kInfFieldNumber;
const int TModelConfig::kLikFieldNumber;
const int TModelConfig::kInputFieldNumber;
const int TModelConfig::kOutputFieldNumber;
const int TModelConfig::kListEntitiesFieldNumber;
const int TModelConfig::kVerboseFieldNumber;
#endif  // !_MSC_VER

TModelConfig::TModelConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TModelConfig::InitAsDefaultInstance() {
}

TModelConfig::TModelConfig(const TModelConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TModelConfig::SharedCtor() {
  _cached_size_ = 0;
  cov_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mean_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  inf_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  lik_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  input_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  output_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  listentities_ = false;
  verbose_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TModelConfig::~TModelConfig() {
  SharedDtor();
}

void TModelConfig::SharedDtor() {
  if (cov_ != &::google::protobuf::internal::kEmptyString) {
    delete cov_;
  }
  if (mean_ != &::google::protobuf::internal::kEmptyString) {
    delete mean_;
  }
  if (inf_ != &::google::protobuf::internal::kEmptyString) {
    delete inf_;
  }
  if (lik_ != &::google::protobuf::internal::kEmptyString) {
    delete lik_;
  }
  if (input_ != &::google::protobuf::internal::kEmptyString) {
    delete input_;
  }
  if (output_ != &::google::protobuf::internal::kEmptyString) {
    delete output_;
  }
  if (this != default_instance_) {
  }
}

void TModelConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TModelConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TModelConfig_descriptor_;
}

const TModelConfig& TModelConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2eproto();
  return *default_instance_;
}

TModelConfig* TModelConfig::default_instance_ = NULL;

TModelConfig* TModelConfig::New() const {
  return new TModelConfig;
}

void TModelConfig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_cov()) {
      if (cov_ != &::google::protobuf::internal::kEmptyString) {
        cov_->clear();
      }
    }
    if (has_mean()) {
      if (mean_ != &::google::protobuf::internal::kEmptyString) {
        mean_->clear();
      }
    }
    if (has_inf()) {
      if (inf_ != &::google::protobuf::internal::kEmptyString) {
        inf_->clear();
      }
    }
    if (has_lik()) {
      if (lik_ != &::google::protobuf::internal::kEmptyString) {
        lik_->clear();
      }
    }
    if (has_input()) {
      if (input_ != &::google::protobuf::internal::kEmptyString) {
        input_->clear();
      }
    }
    if (has_output()) {
      if (output_ != &::google::protobuf::internal::kEmptyString) {
        output_->clear();
      }
    }
    listentities_ = false;
    verbose_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TModelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Cov = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cov()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cov().data(), this->cov().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Mean;
        break;
      }

      // optional string Mean = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Mean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mean()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mean().data(), this->mean().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Inf;
        break;
      }

      // optional string Inf = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Inf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inf()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->inf().data(), this->inf().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Lik;
        break;
      }

      // optional string Lik = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Lik:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lik()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lik().data(), this->lik().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_Input;
        break;
      }

      // optional string Input = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->input().data(), this->input().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_Output;
        break;
      }

      // optional string Output = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->output().data(), this->output().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_ListEntities;
        break;
      }

      // optional bool ListEntities = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ListEntities:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &listentities_)));
          set_has_listentities();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_Verbose;
        break;
      }

      // optional bool Verbose = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Verbose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &verbose_)));
          set_has_verbose();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TModelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string Cov = 1;
  if (has_cov()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cov().data(), this->cov().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->cov(), output);
  }

  // optional string Mean = 2;
  if (has_mean()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mean().data(), this->mean().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->mean(), output);
  }

  // optional string Inf = 3;
  if (has_inf()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inf().data(), this->inf().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->inf(), output);
  }

  // optional string Lik = 4;
  if (has_lik()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lik().data(), this->lik().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->lik(), output);
  }

  // optional string Input = 5;
  if (has_input()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->input().data(), this->input().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->input(), output);
  }

  // optional string Output = 6;
  if (has_output()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->output().data(), this->output().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->output(), output);
  }

  // optional bool ListEntities = 7;
  if (has_listentities()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->listentities(), output);
  }

  // optional bool Verbose = 8;
  if (has_verbose()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->verbose(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TModelConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string Cov = 1;
  if (has_cov()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cov().data(), this->cov().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cov(), target);
  }

  // optional string Mean = 2;
  if (has_mean()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mean().data(), this->mean().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mean(), target);
  }

  // optional string Inf = 3;
  if (has_inf()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inf().data(), this->inf().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->inf(), target);
  }

  // optional string Lik = 4;
  if (has_lik()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lik().data(), this->lik().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lik(), target);
  }

  // optional string Input = 5;
  if (has_input()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->input().data(), this->input().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->input(), target);
  }

  // optional string Output = 6;
  if (has_output()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->output().data(), this->output().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->output(), target);
  }

  // optional bool ListEntities = 7;
  if (has_listentities()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->listentities(), target);
  }

  // optional bool Verbose = 8;
  if (has_verbose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->verbose(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TModelConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Cov = 1;
    if (has_cov()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cov());
    }

    // optional string Mean = 2;
    if (has_mean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mean());
    }

    // optional string Inf = 3;
    if (has_inf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inf());
    }

    // optional string Lik = 4;
    if (has_lik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lik());
    }

    // optional string Input = 5;
    if (has_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->input());
    }

    // optional string Output = 6;
    if (has_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->output());
    }

    // optional bool ListEntities = 7;
    if (has_listentities()) {
      total_size += 1 + 1;
    }

    // optional bool Verbose = 8;
    if (has_verbose()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TModelConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TModelConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TModelConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TModelConfig::MergeFrom(const TModelConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cov()) {
      set_cov(from.cov());
    }
    if (from.has_mean()) {
      set_mean(from.mean());
    }
    if (from.has_inf()) {
      set_inf(from.inf());
    }
    if (from.has_lik()) {
      set_lik(from.lik());
    }
    if (from.has_input()) {
      set_input(from.input());
    }
    if (from.has_output()) {
      set_output(from.output());
    }
    if (from.has_listentities()) {
      set_listentities(from.listentities());
    }
    if (from.has_verbose()) {
      set_verbose(from.verbose());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TModelConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TModelConfig::CopyFrom(const TModelConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TModelConfig::IsInitialized() const {

  return true;
}

void TModelConfig::Swap(TModelConfig* other) {
  if (other != this) {
    std::swap(cov_, other->cov_);
    std::swap(mean_, other->mean_);
    std::swap(inf_, other->inf_);
    std::swap(lik_, other->lik_);
    std::swap(input_, other->input_);
    std::swap(output_, other->output_);
    std::swap(listentities_, other->listentities_);
    std::swap(verbose_, other->verbose_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TModelConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TModelConfig_descriptor_;
  metadata.reflection = TModelConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace NEgoProto

// @@protoc_insertion_point(global_scope)
